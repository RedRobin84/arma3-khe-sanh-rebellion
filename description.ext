class CfgNotifications {

    class Warning {
        color[] = {"(profilenamespace getvariable ['IGUI_WARNING_RGB_R',0.8])","(profilenamespace getvariable ['IGUI_WARNING_RGB_G',0.5])","(profilenamespace getvariable ['IGUI_WARNING_RGB_B',0.0])",1};
        iconPicture = "\a3\Ui_f\data\Map\Markers\Military\warning_ca.paa";
        description = "%1";
        sound = "defaultNotification";
        soundClose = "defaultNotificationClose";
        title = "Warning";
        duration = 10;
    };

    class ScoreAdded
    {
        color[] = {0.5,1,1,1};
        description = "%1";
        iconText = "intel";
        priority = 0;
        difficulty[] = {"scoreTable"};
        duration = 10;
        sound = "scoreAdded";
    };

};

class cfgMusic 
{
    tracks[] = {};

    class KheSanhIntro
    {
        name = "Khe Sanh Intro";
        sound[] = {"music\khe_sanh_intro.ogg", db+5, 1};
    };
};

class RscTitles 
{ 
       class ManpowerTitle 
       { 
           idd = 1; 
           duration = 999999; 
           onLoad = "uiNameSpace setVariable ['myUI_manpower', (_this select 0) displayCtrl 101];";
           class controls 
           { 
                   class ManpowerControl 
                   { 
                           idc = 101; 
                           type = 0; 
                           style = 2; 
                           x =  safeZoneX + safeZoneW - 0.3 * 3 / 4; 
                           y = safeZoneY + safeZoneH - 0.15; 
                           w = 0.2; 
                           h = 0.2 * 3 / 4; 
                           font = "EtelkaNarrowMediumPro"; 
                           sizeEX = 0.05; 
                           colorBackground[] = {0,0,0,0}; 
                           colorText[] = {1,1,1,0.5}; 
                           text = "Manpower: 0"; 
                       }; 
               }; 
       }; 
       class DefConTitle 
       { 
           idd = 2; 
           duration = 999999;
           onLoad = "uiNameSpace setVariable ['myUI_DefCon', (_this select 0) displayCtrl 102];";
           class controls 
           { 
                   class DefConControl 
                   { 
                           idc = 102; 
                           type = 0; 
                           style = 2; 
                           x =  safeZoneX + safeZoneW - 0.6 * 3 / 4; 
                           y = safeZoneY + safeZoneH - 0.15; 
                           w = 0.2; 
                           h = 0.2 * 3 / 4; 
                           font = "EtelkaNarrowMediumPro"; 
                           sizeEX = 0.05; 
                           colorBackground[] = {0,0,0,0}; 
                           colorText[] = {1,1,1,0.5}; 
                           text = "DEFCON: 6"; 
                       }; 
               }; 
       }; 
};

class CivilianPresence_Presets 
{
    class Civ_Vietnamese
    {
        name = "Men (Vietnamese)";
        picture = "\a3\Data_f_enoch\flags\flag_Enoch_CO.paa";
        value = "Civ_Vietnamese";
        defaultValue = "Civ_Vietnamese";
        class UnitTypes
        {
            bis_units[] = {"vn_c_men_01", "vn_c_men_02", "vn_c_men_03", "vn_c_men_04", "vn_c_men_05", "vn_c_men_06", "vn_c_men_07"};
        };
    };
};

class CfgFunctions
{

    class REB
    {
        class Faction {
            class getBLUEFORattackFactionBasedOnDefConLevel {};
            class getBLUEFORdefenseFactionBasedOnDefConLevel {};
            class getBLUEFORfactionSoldierTypesCount {};
            class setBLUEFORunitSkillBasedOnFaction {};
        };

        class Generators
        {
            class addLootSpawnEvent {};
            class addRepeatedLootSpawnEvent {};
            class generateRandomWeapons {};
            class generateRandomExplosives {};
            class generateRandomAccessiories {};
            class spawnGeneralLoot {};
        };

        class Global
        {
            class calculateDefCon {};
            class calculateTotalPOVL {};
            class decreaseSectorManpower {};
            class decrementSectorManpower {};
            class gameTickLoop {};
            class resetSectorManpower {};
            class generateManpower {};
        };

        class GUI
        {
            class displayCurrentDefCon {};
            class initGUI {};
            class makeAllSystemMarkersInvisible {};
            class updateManpowerGUI {};
            class updateDefConGUI {};
        };

        class Init
        {
            class initSectorVars {};
            class villagerInit {};
        };

        class Sector {
           
            class closestSectorIsOwnedByEast {};
            class getAllSectors {};
            class getClosestSectorToObject {};
            class getRandomEastSectorName {};
            class getSectorController {};
            class getSectorManpower {};
            class getSectorName {};
            class getSectorsOwnedBySide {};
            class getSectorValue {};
            class getSectorVarName {};
            class getTownSectorsOwnedByEast {};
            class checkIfAllSectorsOwnedByEast {};
            class setSectorController {};
            class setSectorMarkerColor {};
        };
        /*
        class Sector_old {
            class checkIfAllSectorsOwnedByEast {};
            class closestSectorIsOwnedByEast {};
            class getAllSectors {};
            class getClosestSectorToObject {};
            class getSectorsOwnedBySide {};
            class getSectorValue {};
            class getTownSectorsOwnedByEast {};
            class initWinConditionForSectorsEventHandlers {};
        };
        */
        class Spawn {
            class populateEnemySectors {};
            class recruitUnit {};
        };

        class Utils
        {
            class displayMessage {};
            class getRandomNumberWithLessThanTenZeroPrefix {};
            class percentageChanceOf {};
        };
    };

    class SCS
    {
        class Sector {

        };
    };

    class llama
    {
        class marker_sector
        {
            class triggerSectorActivation {};
            class triggerSectorDeactivation {};
            class triggerSectorEvaluator {};
        };

    };
};
